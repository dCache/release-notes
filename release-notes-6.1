HTML header: <title>dCache 6.1 Release Notes</title>
             <!--#include virtual="/template/default-head.shtml" -->
             <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
             <!-- Bootstrap -->
             <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"
                   integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous"/>
             <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css"
                   integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous"/>
             <!--link type="text/css" rel="stylesheet" href="jquery.tocify.css" /-->
             <style type="text/css">
             h5 {
                 font-size: 15px;
                 font-style: italic;
                 margin-top: 20px;
             }
             body {
                 padding-top: 20px;
             }
             @media (max-width: 767px) {
                 #toc {
                     position: relative;
                     width: 100%;
                     margin: 0px 0px 20px 0px;
                 }
             }
             @media print {
                 #toc {
                     display: none;
                 }
             }
             </style>

<div class="container">
<div id="banner">
   <div id="bird_large">
      <img src="/images/dcache-banner.png" class="bird"></img>
   </div>
   <div id="sidebar-b">
      <span class="dcache-nav-bar">
      <a href="/index.shtml">home</a>
      |
      <a href="/news.shtml">news</a>
      |
      <a href="/manuals/index.shtml">documentation</a>
      |
      <a href="/downloads/IAgree.shtml">downloads</a>
      |
      <a href="/feedback.shtml">feedback</a>
      |
      <a href="/manuals/googlesearch.shtml">search</a>
      |
      <a href="/imprint.shtml">imprint&#160;</a>
      </span>
   </div>
</div>
<div id="content">

<div class="row">

<div class="page-header">
<h1>What's new in dCache 6.1<br/>
<small>Release notes</small></h1>
</div>

## Highlights

- Optional TLS for p2p transfers
- Zone-aware cell messaging
- New serialization format

## Incompatibilities

Starting release 6.1 the `BerkeleyDBMetaDataRepository` is the default metadata repository for the pools.
Sites that was not explitirly specifing `pool.plugins.meta` property have to set the old default value:
```
pool.plugins.meta=org.dcache.pool.repository.meta.file.FileMetaDataRepository
```

Pool in 6.1.x are not compatible with older dcap doors. However, new dcap doors can operate with existing
pools.

## Acknowledgments

(tbd, this section uses markdown formatting)



## Release 6.1.0

### Cells

Starting with release 6.1.0 dCache internal massage routing will prefer zone local cells when possible.
This is benefitial in geo-distributed HA setups, where talking to remote cells may introduce additional
latency.

A new serializer is available in dCache, which improves the speed of internal message passing between cells.
As this feature has not been tested very extensively and it's possible that sites may experience unforeseen
behavior, the new serializer has to be explicitly enabled as:
 
```dcache.broker.channel.msg-payload-serializer = experimental```

NOTE: when different cells are not on the same bug-fix release, then dCache will allways fall back to the standard
serialization protocol.

### Admin

### Alarms

### Billing

### Chimera
Removed unneccesary requests to DB on new file creation.
Fixed operation with read-only database cponnections.

### DCAP

### Frontend

As part of the effort (in progress) to provide enhanced support for QoS,
the RESTful QoS transition API and implementation has been revisited.
First, the way QoS was being evaluated (counting all pins) has been 
corrected by using a QoS owned pin.  Next, in addition to pinning,  
QoS changes now involve modification of the access latency and  
retention policy values for the file in the namespace.  The frontend
notifies PnfsManager of these transitions, and this notification
then gets relayed to resilience.  Some internal refactoring of 
the QoS logic out of frontend and into core was also done.

An inefficiency resulting in the double fetch of sweeper data
from the pools was fixed.  

The restores and transfers admin pages were erroneously requiring 
user login; this has been eliminated.

For the API enabling and disabling pools, a bug preventing the
expression of the flag using a boolean rather than a string, e.g.,
```
pools/{name}/usage/mode -d {"rdonly":true} 
```
rather than
```
pools/{name}/usage/mode -d {"rdonly":"true"})
```
has been fixed.

### FTP

### gplazma

### History

Some commands available on the frontend for refreshing and adjusting
the timeout of pool data collection were missing from the history service;
these have now been made available.

Also addressed were null-pointer issues arising from the arrival of
incompletely initialized data from the pools; code was refactored to
make sure composed objects do not have empty fields; also
added a few extra checks for missing data.

### Hoppingmanager

### httpd

### Info

### Missing Files

### NFS
The admin command 'show clients' is updated to accept `address/netmask` or `pattern` as a host argument,
for example:
```
admin > show clients 10.1.1.0/24
admin > show clients fe80::eef4:bbff:fed2:f9d0
admin > show clients wn*.dcache.org
```

### PNFS Manager

Notification is now sent when access latency or retention policy changes for a file
(in order to support the RESTful transition API and management of QoS by resilience).

### Pool
Starting from 6.1.0 the pool to pool transfers can be optionaly configured to use TLS. A new propertry
`pool.enable.encrypted.p2p-transfers` is introduced that accepts three values:

 - NEVER: TLS is never used for p2p transfers
 - ALWAYS: all p2p transfers aare using TLS
 - CROSSZONES: TLS is used only when source and dstination pools are in different zones.
 
NOTE, that in the current implementation `CROSSZONES` has the same effect as `ALWAYS`.

The BerkeleyDBMetaDataRepository is now default format for pools metadata.

An efficiency in the processing of sweeper data for frontend histogram display, one 
which could result in CPU spiking on the pool node, has been fixed via an in-memory
optimization replacing callouts to the repository store.

The pool transfer service now incorporates both older and newer xrootd version
numbers for compatibility (2.7, 4).

### Pool Manager

The network hostname of the pool is now made available to the selection unit
in order to support the xrootd 'tried' query element; a small fix was also 
added to restore backward compatibility with older pools that do not so advertise 
their host name to the pool monitor.

The selection algorithm has been modified to support excluding tried hosts.

### Resilience

Modifications were made to couple resilience more tightly to QoS transition requests; 
it can now manage transitions for "resilient" files between tape and disk.  This means that it will 
make replicas for a NEARLINE file which has become ONLINE, and can cache all replicas for an 
ONLINE file that has become NEARLINE, provided that a file belongs to a storage unit 
with a non-null '-required' value.

A small bug (null pointer exception) which could occur if a file staged from tape no longer exists 
on any pool that is part of a resilient poolgroup has been fixed.   There were also two minor 
code improvements involving object comparisons.

### Space Manager

### SRM / SRM Manager

### Statistics

### Topo

### Transfer Manager

### WebDAV

### XRootD

The dCache XrootD door now observes the xrootd protocol 'tried=host1,host2,...' query element.  
What this means is that if the xrootd client (xrdcp) should decide to retry a failed transaction 
by returning to the dCache door, the hosts listed as having been previously tried will be used
to exclude potential pools for the transfer.  Should no other pools be available, dCache
will behave the same as when a file is unavailable (it will wait indefinitely until the client
gives up).

Pool and door compatibility based on changed version numbers has now been fixed so that
older doors will work with newer pools and vice versa.

Error handling (mapping of error types to codes returned to the xrootd client) was
refined to make it more consistent and conform more closely with the xrootd protocol.

The version number indicated by dCache now should reflect the actual xrootd protocol
version being used (it was formerly fixed, incorrectly, at 2.7).

The xrootd client is now redirected to the pool using an actual hostname rather than
IP address, for the sake of compatibility with newer xrootd version which adhere more
strictly to RFC 5280 (4.2.1.6.  Subject Alternative Name).  This is essential for
eventual support of TLS.

Two internal changes in advance of future features (TLS, SciTokens) have been
added:  the door now uses a caching login strategy, similarly to most of the
other dCache doors; it now also supports authorization handlers which need
to access login strategies (both of these will be necessary for SciTokens).

A bug in the delegation provider requiring that a VOMS directory be defined even 
if the GSI module is not being used has been fixed.

A bug preventing read paths from being observed by the list command has been fixed.

A bug preventing  xrdcp -C <checksum type> from returning the correct checksum
when multiple checksums are defined on the pools has been fixed.


### Zookeeper

### Batch/Startup scripts

The batch scripts for the alarms service and xrootd doors were erroneously configured not to
exit and restart on fatal errors; if there were unhandled exceptions during startup, these
two services would simply hang, making detection of their status (e.g., through external 
monitoring) difficult.  The scripts have been fixed to conform to the exit/restart
sequence used by all other services.


### Changelog from 6.0.0 to 6.1.0

<!-- git log 6.0..6.1 -no-merges -format='[%h](https://github.com/dcache/dcache/commit/%H)%n:   %s%n' -->

(tbd as soon as the branching is done.
In order to run the git log command given above, make sure that
- both branches are checked out and "git pull"ed in to make them local on your machine and
- you replace the single dashes by double dashes on the command's parameters)

</div>
</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" type="text/javascript"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"
        integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
